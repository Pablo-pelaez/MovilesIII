/* 
FLEXBOX

Estas Propiedades se aplican desde el contenedor PADRE
Display: flex en caja padre
flex-direction: para dar la dirección desde la caja padre a sus hijos
justify-content: Organizar los elementos hijos de diferentes maneras
align-items: Orgaiza los elementos en función al flex-direction. Si está de manera horizontal, los alineará de manera vertical y viceversa.

Estas Propiedades se aplican desde el contenedor HIJO
align-self: organiza un elemento de manera individual

REGLAS CSS

@media: permite darle rangos del tamaño de pantalla y aplicar estilos específicos
@keyframes: Permite realizar animaciones en CSS (tiempo, tipo de animación, velocidad)
*/

*{
    background-color: rgb(39, 39, 39);
    color: beige;
    box-sizing: border-box;
    margin: 0;
}

.container{
    width: 100%;
    height: 500px; 
    background-color: steelblue;
    display: flex;
    flex-direction:row-reverse;
    justify-content:center;
    align-items:flex-start;
}

.caja1, .caja2, .caja3{
    width: 20%;
    height: 200px;
    background-color: lightcoral;
    animation-name: mover;
    animation-timing-function: all;
    animation-duration: 3s;
    left: 0;
    position: relative;
}

.caja2{
    background-color: rgb(10, 87, 10);
}

.caja3{
    background-color: rgb(68, 67, 122);
}

@media  (min-width: 0px) and (max-width: 480px){
    .container{
        background-color: lightseagreen;
    }

    .caja{
        width: 50%;
    }
}

@media  (min-width: 481px) and (max-width: 920px){
    .container{
        background-color: rgb(85, 92, 192);
    }

    .caja{
        width: 40%;
    }

}

@keyframes mover {
    from{
        top: 0;
        right: 0;
    }
    to {
        top: 0;
        left: auto;
    }
}

